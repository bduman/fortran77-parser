PROGRAM                  =>	keyword
MAIN                     =>	identifier
INTEGER                  =>	identifier
N                        =>	identifier
,                        =>	operator [comma]
X                        =>	identifier
EXTERNAL                 =>	keyword
SUB1                     =>	identifier
COMMON                   =>	keyword
/                        =>	operator [division]
GLOBALS                  =>	identifier
/                        =>	operator [division]
N                        =>	identifier
X                        =>	identifier
=                        =>	operator [equation]
0                        =>	identifier [digit]
PRINT                    =>	keyword
*                        =>	operator [multiplication]
,                        =>	operator [comma]
'Enter number of repeats'=>	identifier [string]
READ                     =>	keyword
(                        =>	parenthesis [left]
*                        =>	operator [multiplication]
,                        =>	operator [comma]
*                        =>	operator [multiplication]
)                        =>	parenthesis [right]
N                        =>	identifier
CALL                     =>	keyword
SUB1                     =>	identifier
(                        =>	parenthesis [left]
X                        =>	identifier
,                        =>	operator [comma]
SUB1                     =>	identifier
)                        =>	parenthesis [right]
END                      =>	keyword
SUBROUTINE               =>	keyword
SUB1                     =>	identifier
(                        =>	parenthesis [left]
X                        =>	identifier
,                        =>	operator [comma]
DUMSUB                   =>	identifier
)                        =>	parenthesis [right]
INTEGER                  =>	identifier
N                        =>	identifier
,                        =>	operator [comma]
X                        =>	identifier
,                        =>	operator [comma]
Y                        =>	identifier
EXTERNAL                 =>	keyword
DUMSUB                   =>	identifier
COMMON                   =>	keyword
/                        =>	operator [division]
GLOBALS                  =>	identifier
/                        =>	operator [division]
N                        =>	identifier
DATA                     =>	keyword
Y                        =>	identifier
/                        =>	operator [division]
0                        =>	identifier [digit]
/                        =>	operator [division]
IF                       =>	keyword
(                        =>	parenthesis [left]
X                        =>	identifier
.LT.                     =>	operator [logical or relational]
N                        =>	identifier
)                        =>	parenthesis [right]
THEN                     =>	keyword
X                        =>	identifier
=                        =>	operator [equation]
X                        =>	identifier
+                        =>	operator [addition]
1                        =>	identifier [digit]
Y                        =>	identifier
=                        =>	operator [equation]
Y                        =>	identifier
+                        =>	operator [addition]
1                        =>	identifier [digit]
PRINT                    =>	keyword
*                        =>	operator [multiplication]
,                        =>	operator [comma]
'x = 'S                  =>	identifier [string]
,                        =>	operator [comma]
X                        =>	identifier
,                        =>	operator [comma]
', y = '                 =>	identifier [string]
,                        =>	operator [comma]
Y                        =>	identifier
CALL                     =>	keyword
DUMSUB                   =>	identifier
(                        =>	parenthesis [left]
X                        =>	identifier
,                        =>	operator [comma]
DUMSUB                   =>	identifier
)                        =>	parenthesis [right]
END                      =>	keyword
IF                       =>	keyword
END                      =>	keyword
